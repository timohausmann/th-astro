---
import type { Project, ProjectTileVisibility } from "../types/projects";
import { IconArrowUpRight } from "@tabler/icons-react";
import ProjectLink from "./ProjectLink.astro";
import ProjectImageCard from "./ProjectImageCard.astro";
import Tags from "./Tags.astro";
import { slugify } from "../utils/slugify";

interface Props {
    project: Project;
    defaultVisibility?: ProjectTileVisibility;
}

const { project, defaultVisibility = "visible" } = Astro.props;
const tags = project.tech.slice(0, 3);
if (tags.length < project.tech.length) {
    tags.push(`+${project.tech.length - 3}`);
}

const categories = project.categories.map((category) => {
    return slugify(category);
});
---

<li
    class="item"
    data-slug={project.slug}
    data-module="3dcard, project-filter"
    data-categories={categories.join(",")}
    data-visibility={defaultVisibility}
    id={project.slug}
>
    <div class="preview">
        <a
            class="link"
            href={`/project/${project.slug}`}
            data-clickable={project.slug}
        >
            <ProjectImageCard project={project} />
            <div class="cta">
                <ProjectLink text={project.title} suptitle={project.suptitle}>
                    <IconArrowUpRight />
                </ProjectLink>
                <div class="tags">
                    <Tags size={"sm"} tags={tags} />
                </div>
            </div>
        </a>
    </div>
</li>

<script src="../scripts/3dcards.ts"></script>

<style>
    .item {
        /* transform-style: preserve-3d; */
        will-change: transform;
        display: flex;
        gap: 4rem;
        align-items: center;
        justify-content: center;
        scroll-margin-top: 12rem;
        transition:
            opacity 0.3s ease,
            transform 0.3s ease;
    }

    /* Visibility states */
    .item[data-visibility="in"],
    .item[data-visibility="out"],
    .item[data-visibility="hidden"] {
        pointer-events: none;
    }

    .item[data-visibility="hidden"] {
        display: none;
    }
    .preview {
        display: flex;
        justify-content: center;
        gap: 1rem;
        transition: transform 0.4s;
        width: 100%;
    }
    .preview:hover {
        transform: scale(1.05);
        cursor: pointer;
    }

    .link {
        /* this needs to hug the img */
        display: inline-flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
        /* link is 3d for in/out filter animations */
        transform: perspective(1000px) scale(1);
    }

    @media (--projects-small) {
        .item {
            flex-direction: column;
            gap: 1rem;
            scroll-margin-top: 8rem;
        }
    }

    .tags {
        padding-left: 3rem;
        padding-top: 0.75rem;
    }
</style>
