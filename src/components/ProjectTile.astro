---
import type { Project } from "../types/projects";
import { IconArrowUpRight, IconExternalLink } from "@tabler/icons-react";
import ProjectLink from "./ProjectLink.astro";
import ProjectImageCard from "./ProjectImageCard.astro";
import ProjectDetailContent from "./ProjectDetailContent.astro";
import ProjectDetailHeader from "./ProjectDetailHeader.astro";
import ButtonLink from "./ButtonLink.astro";

interface Props {
    project: Project;
}

const { project } = Astro.props;
---

<li
    class="item"
    data-slug={project.slug}
    transition:name={`project-${project.id}`}
    id={project.slug}
>
    <div class="preview">
        <a
            class="link"
            href={`/project/${project.slug}`}
            data-clickable={project.slug}
        >
            <ProjectImageCard project={project} />
            <div class="cta">
                <ProjectLink text={project.title} suptitle={project.suptitle}>
                    <IconArrowUpRight />
                </ProjectLink>
            </div>
        </a>
        {
            project.href && (
                <div class="href-desktop">
                    <ButtonLink
                        href={project.href}
                        label="Besuchen"
                        blank
                        class="caps-14"
                        bgcolor="white"
                    >
                        <IconExternalLink
                            size={20}
                            stroke={1.5}
                            slot="iconAfter"
                        />
                    </ButtonLink>
                </div>
            )
        }
    </div>
    <div class="content">
        <ProjectDetailHeader project={project} />
        <ProjectDetailContent project={project} />
    </div>
</li>
<style>
    .preview {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
        transition: transform 0.4s;
    }
    .item:not(.is-open) .preview:hover {
        transform: scale(1.05);
        cursor: pointer;
    }

    .link {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .item {
        transform-style: preserve-3d;
        display: flex;
        gap: 4rem;
        align-items: center;
        justify-content: center;
        scroll-margin-top: 12rem;
    }

    .item.is-open {
        opacity: 1;
        z-index: 10;
        transform: none !important;
        grid-column: 1 / span 2;
    }
    .item.is-open .cta {
        display: none;
    }

    .item.is-closed {
        opacity: 0;
        display: none;
    }

    .content {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .href-desktop {
        display: none;
    }

    .item:not(.is-open) .content {
        display: none;
    }
    @media (--projects-small) {
        .item {
            flex-direction: column;
            gap: 1rem;
            scroll-margin-top: 8rem;
        }
    }
    @media (--projects-large) {
        .content {
            width: 33vw;
        }
        .item.is-open .href-desktop {
            display: block;
        }
    }
</style>
