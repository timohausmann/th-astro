<div id="hero-canvas-container"></div>

<style>
    #hero-canvas-container {
        position: absolute;
        display: flex;
        align-items: stretch;
        justify-content: center;
        inset: 0;
        pointer-events: none;
    }
    #hero-canvas-container :global(canvas) {
        width: 100%;
        height: 100%;
        display: block;
        object-fit: cover;
    }
</style>

<script>
    import { SpiralEffect } from "../canvas/spiral";

    let resizeObserver: ResizeObserver | null = null;
    let effect: SpiralEffect | null = null;

    function cleanupCanvas() {
        resizeObserver?.disconnect();
        effect?.destroy();
    }

    function initCanvas() {
        const container = document.getElementById("hero-canvas-container");
        if (!container) return;

        // Create canvas element
        const canvas = document.createElement("canvas");
        container.appendChild(canvas);

        // Initialize effect with custom color
        effect = new SpiralEffect();
        effect.init(canvas);

        // Handle resize
        resizeObserver = new ResizeObserver((entries) => {
            for (const entry of entries) {
                const { width, height } = entry.contentRect;
                effect?.resize(width, height);
            }
        });
        resizeObserver.observe(container);
    }

    document.addEventListener("astro:page-load", initCanvas);
    document.addEventListener("astro:before-preparation", cleanupCanvas);
</script>
