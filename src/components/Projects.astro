---
import { getProjects } from "../scripts/getProjects";
import { getState } from "../scripts/projectStore";
import { slugify } from "../utils/slugify";
import ProjectTile from "./ProjectTile.astro";
import ProjectFilter from "./ProjectFilter.astro";
import type { ProjectTileVisibility } from "../types/projects";

const projects = getProjects();
const { currentFilter } = getState();

// Determine default visibility based on current filter
const getDefaultVisibility = (
    projectCategories: string[],
    filter: string | null
): ProjectTileVisibility => {
    if (!filter || filter === "all") {
        return "visible";
    }

    const categorySlugs = projectCategories.map((cat) => slugify(cat));
    return categorySlugs.includes(filter) ? "visible" : "hidden";
};
---

<div class="filter-container">
    <ProjectFilter />
</div>
<div id="project-wrap">
    <section class="projects row" id="referenzen">
        <ul class="list row-inner row-inner--full">
            {
                projects.map((project) => {
                    const defaultVisibility = getDefaultVisibility(
                        project.categories,
                        currentFilter
                    );
                    return (
                        <ProjectTile
                            project={project}
                            defaultVisibility={defaultVisibility}
                        />
                    );
                })
            }
        </ul>
    </section>
</div>
<style>
    .filter-container {
        position: fixed;
        top: 2rem;
        right: var(--screen-gutter); 
        z-index: 100;
    }
    #project-wrap {
        position: relative;
        padding-top: 2rem;
        padding-bottom: 6rem;
    }
    .title {
        font-family: "Delight";
        font-size: clamp(1.75rem, 4vw, 3rem);
        font-weight: 800;
        text-align: center;
        color: #3e3b9c;
    }

    .projects {
        position: relative;
        z-index: 2;
        --limit: 320px;
    }

    .list {
        display: flex;
        flex-direction: column;
        gap: 4rem;
        align-items: center;
    }

    .button-container {
        display: flex;
        justify-content: center;
        margin-top: 4rem;
    }

    @media (--projects-large) {
        .list {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            align-items: start;
            justify-content: center;
        }
    }
    @media (--xl3) {
        .list {
            grid-template-columns: repeat(3, 1fr);
        }
    }
</style>
